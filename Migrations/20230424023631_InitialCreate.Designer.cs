// <auto-generated />
using FunTask.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FunTask.Migrations
{
    [DbContext(typeof(FunTaskerContext))]
    [Migration("20230424023631_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FunTask.Models.Actividad", b =>
                {
                    b.Property<int>("ActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActividadId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiasCompletados")
                        .HasColumnType("int");

                    b.Property<int>("DiasParaRecompensa")
                        .HasColumnType("int");

                    b.Property<int>("HijoId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecompensaId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActividadId");

                    b.HasIndex("HijoId");

                    b.HasIndex("RecompensaId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("FunTask.Models.Hijo", b =>
                {
                    b.Property<int>("HijoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HijoId"));

                    b.Property<string>("ImagenPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("HijoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Hijos");
                });

            modelBuilder.Entity("FunTask.Models.Recompensa", b =>
                {
                    b.Property<int>("RecompensaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecompensaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecompensaId");

                    b.ToTable("Recompensas");
                });

            modelBuilder.Entity("FunTask.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FunTask.Models.Actividad", b =>
                {
                    b.HasOne("FunTask.Models.Hijo", "Hijo")
                        .WithMany("Actividades")
                        .HasForeignKey("HijoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FunTask.Models.Recompensa", "Recompensa")
                        .WithMany()
                        .HasForeignKey("RecompensaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hijo");

                    b.Navigation("Recompensa");
                });

            modelBuilder.Entity("FunTask.Models.Hijo", b =>
                {
                    b.HasOne("FunTask.Models.Usuario", "Usuario")
                        .WithMany("Hijos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FunTask.Models.Hijo", b =>
                {
                    b.Navigation("Actividades");
                });

            modelBuilder.Entity("FunTask.Models.Usuario", b =>
                {
                    b.Navigation("Hijos");
                });
#pragma warning restore 612, 618
        }
    }
}
